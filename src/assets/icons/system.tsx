interface Props {
  color?: string;
  size?: number;
}

export const Other = ({ color, size }: Props) => (
  <svg
    width={size ? size.toString() : '24'}
    height={size ? size.toString() : '24'}
    viewBox="0 0 24 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M12 15V14C12 13 12 12.5 13 12C14 11.5 15 11 15 9.5C15 8.5 14 7 12 7C10 7 9 8.264 9 10M12 16V18M2 3.99C2 2.892 2.898 2 3.99 2H20.01C21.108 2 22 2.898 22 3.99V20.01C22 21.109 21.102 22 20.01 22H3.99C3.46262 21.9987 2.95723 21.7886 2.58432 21.4157C2.2114 21.0428 2.00132 20.5374 2 20.01V3.99Z"
      stroke={color ? color : 'currentColor'}
      strokeWidth="2"
    />
  </svg>
);

export const Linux = ({ color, size }: Props) => (
  <svg
    width={size ? size.toString() : '24'}
    height={size ? size.toString() : '24'}
    viewBox="0 0 24 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <g clipPath="url(#clip0_539_5332)">
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M7.26435 3.85122C7.48812 2.76138 8.08196 1.78248 8.94516 1.08055C9.80836 0.378613 10.8878 -0.00314449 12.0004 1.95102e-05C13.1129 -0.00314449 14.1923 0.378613 15.0555 1.08055C15.9187 1.78248 16.5126 2.76138 16.7364 3.85122L17.2772 6.52642C17.5594 7.92732 18.1151 9.25883 18.9123 10.4448L19.8403 11.8256C20.4211 12.688 20.8003 13.6624 20.9571 14.6768C21.4112 14.7143 21.846 14.877 22.2132 15.1467C22.5804 15.4164 22.8656 15.7827 23.0371 16.2048L23.8244 18.1568C24.0168 18.6363 24.0515 19.1647 23.9235 19.6652C23.7955 20.1658 23.5114 20.6126 23.1123 20.9408L20.0979 23.4336C19.6703 23.786 19.1371 23.985 18.5832 23.9989C18.0293 24.0128 17.4867 23.8408 17.0419 23.5104L15.8259 22.608C15.8103 22.596 15.7948 22.5837 15.7796 22.5712C15.1844 22.7312 14.5572 22.8176 13.9108 22.8176H10.09C9.44355 22.8176 8.81635 22.7328 8.22115 22.5712L8.17315 22.608L6.95875 23.5104C6.51399 23.8408 5.9714 24.0128 5.41751 23.9989C4.86363 23.985 4.33035 23.786 3.90275 23.4336L0.886752 20.9424C0.487331 20.6138 0.203097 20.1663 0.0753447 19.6651C-0.0524079 19.1639 -0.0170255 18.635 0.176352 18.1552L0.963552 16.2048C1.13508 15.7827 1.42029 15.4164 1.78749 15.1467C2.15468 14.877 2.58947 14.7143 3.04355 14.6768C3.20148 13.6561 3.58222 12.6826 4.15875 11.8256L5.08675 10.4448C5.88454 9.25893 6.44074 7.92742 6.72355 6.52642L7.26435 3.85122ZM17.3507 15.1616C17.0087 15.4175 16.7395 15.7583 16.5699 16.1504L15.3412 18.9936C14.7086 19.3635 13.9891 19.5584 13.2563 19.5584H10.7444C9.99715 19.5584 9.28035 19.3568 8.65955 18.9936L7.43075 16.1504C7.2609 15.7581 6.99112 15.4171 6.64835 15.1616C6.68995 14.6464 6.83075 14.136 7.07075 13.6608L9.08355 9.66882L9.09475 9.68002C9.8684 10.4449 10.9124 10.8739 12.0004 10.8739C13.0883 10.8739 14.1323 10.4449 14.906 9.68002L14.9171 9.66882L16.93 13.6608C17.17 14.136 17.3108 14.6464 17.3524 15.1616H17.3507ZM14.466 6.83042V4.88962H12.8228V6.17122C13.1716 6.24162 13.5123 6.35842 13.8371 6.52002L14.466 6.83042ZM11.178 6.17122V4.88962H9.53635V6.83042L10.1652 6.52002C10.49 6.35842 10.8308 6.24162 11.178 6.17122ZM3.25315 16.2992C3.08942 16.2989 2.92933 16.3475 2.79336 16.4387C2.65739 16.5299 2.55175 16.6596 2.48995 16.8112L1.70275 18.7616C1.63863 18.9214 1.62701 19.0975 1.66958 19.2643C1.71215 19.4311 1.8067 19.5801 1.93955 19.6896L4.95395 22.1808C5.09639 22.2985 5.27414 22.3652 5.45886 22.3701C5.64358 22.375 5.82464 22.318 5.97315 22.208L7.18755 21.304C7.33455 21.1952 7.44046 21.0399 7.48809 20.8633C7.53573 20.6867 7.52229 20.4992 7.44995 20.3312L5.92035 16.792C5.85639 16.645 5.75082 16.5198 5.61664 16.432C5.48246 16.3441 5.32553 16.2974 5.16515 16.2976H3.25315V16.2992ZM21.5108 16.8112C21.449 16.6596 21.3433 16.5299 21.2073 16.4387C21.0714 16.3475 20.9113 16.2989 20.7475 16.2992H18.8356C18.6754 16.2989 18.5185 16.3453 18.3844 16.4329C18.2502 16.5204 18.1446 16.6453 18.0804 16.792L16.5507 20.3312C16.4784 20.4992 16.465 20.6867 16.5126 20.8633C16.5602 21.0399 16.6661 21.1952 16.8132 21.304L18.0276 22.208C18.3316 22.4336 18.754 22.4224 19.0468 22.1808L22.0611 19.6896C22.194 19.5801 22.2885 19.4311 22.3311 19.2643C22.3737 19.0975 22.3621 18.9214 22.2979 18.7616L21.5108 16.8096V16.8112ZM10.898 7.97762C11.2406 7.80784 11.6179 7.7195 12.0004 7.7195C12.3828 7.7195 12.7601 7.80784 13.1028 7.97762L13.8996 8.37282L13.7444 8.52802C13.2801 8.98725 12.6534 9.24482 12.0004 9.24482C11.3473 9.24482 10.7206 8.98725 10.2564 8.52802L10.1012 8.37282L10.898 7.97762Z"
        fill={color ? color : 'currentColor'}
      />
    </g>
    <defs>
      <clipPath id="clip0_539_5332">
        <rect width="24" height="24" fill="white" />
      </clipPath>
    </defs>
  </svg>
);

export const Android = ({ color, size }: Props) => (
  <svg
    width={size ? size.toString() : '24'}
    height={size ? size.toString() : '24'}
    viewBox="0 0 24 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M14.975 3.01903L15.935 1.28703C15.9473 1.26483 15.9551 1.24044 15.9579 1.21524C15.9608 1.19003 15.9586 1.16452 15.9516 1.14014C15.9446 1.11577 15.9329 1.09301 15.9171 1.07317C15.9013 1.05334 15.8817 1.03681 15.8595 1.02453C15.8373 1.01225 15.8129 1.00446 15.7877 1.00161C15.7625 0.998761 15.737 1.0009 15.7126 1.00791C15.6882 1.01492 15.6655 1.02667 15.6456 1.04247C15.6258 1.05828 15.6093 1.07783 15.597 1.10003L14.627 2.85003C13.799 2.48698 12.9046 2.29954 12.0005 2.29954C11.0964 2.29954 10.202 2.48698 9.374 2.85003L8.404 1.10003C8.37921 1.05494 8.33751 1.02155 8.2881 1.00721C8.23868 0.992859 8.18559 0.99873 8.1405 1.02353C8.09542 1.04833 8.06203 1.09002 8.04768 1.13943C8.03333 1.18885 8.03921 1.24194 8.064 1.28703L9.024 3.01903C8.11059 3.46952 7.33887 4.16283 6.79345 5.02294C6.24803 5.88304 5.94999 6.87673 5.932 7.89503H18.069C18.0508 6.87652 17.7525 5.88269 17.2067 5.02256C16.6609 4.16243 15.8888 3.46924 14.975 3.01903ZM9.2 5.67403C9.09968 5.67403 9.00162 5.64427 8.91823 5.58851C8.83483 5.53276 8.76984 5.45352 8.7315 5.36082C8.69316 5.26812 8.68317 5.16612 8.70282 5.06775C8.72246 4.96937 8.77085 4.87904 8.84186 4.80817C8.91286 4.73731 9.00329 4.6891 9.10171 4.66965C9.20012 4.6502 9.30209 4.66038 9.39472 4.69891C9.48734 4.73744 9.56646 4.80257 9.62204 4.88608C9.67763 4.96959 9.7072 5.06771 9.707 5.16803C9.70674 5.30232 9.65321 5.43102 9.55815 5.52589C9.4631 5.62075 9.33429 5.67403 9.2 5.67403ZM14.802 5.67403C14.7017 5.67403 14.6036 5.64427 14.5202 5.58851C14.4368 5.53276 14.3718 5.45352 14.3335 5.36082C14.2952 5.26812 14.2852 5.16612 14.3048 5.06775C14.3245 4.96937 14.3728 4.87904 14.4439 4.80817C14.5149 4.73731 14.6053 4.6891 14.7037 4.66965C14.8021 4.6502 14.9041 4.66038 14.9967 4.69891C15.0893 4.73744 15.1685 4.80257 15.224 4.88608C15.2796 4.96959 15.3092 5.06771 15.309 5.16803C15.3087 5.30232 15.2552 5.43102 15.1602 5.52589C15.0651 5.62075 14.9363 5.67403 14.802 5.67403ZM5.93 17.171C5.92974 17.3641 5.96759 17.5553 6.04138 17.7337C6.11518 17.9121 6.22346 18.0742 6.36003 18.2107C6.4966 18.3472 6.65876 18.4554 6.83722 18.529C7.01568 18.6027 7.20693 18.6404 7.4 18.64H8.373V21.64C8.373 22.0009 8.51634 22.3469 8.77148 22.602C9.02663 22.8572 9.37268 23.0005 9.7335 23.0005C10.0943 23.0005 10.4404 22.8572 10.6955 22.602C10.9507 22.3469 11.094 22.0009 11.094 21.64V18.64H12.908V21.64C12.908 22.0007 13.0513 22.3466 13.3063 22.6017C13.5614 22.8567 13.9073 23 14.268 23C14.6287 23 14.9746 22.8567 15.2297 22.6017C15.4847 22.3466 15.628 22.0007 15.628 21.64V18.64H16.602C16.7948 18.6402 16.9858 18.6023 17.1639 18.5286C17.3421 18.4548 17.504 18.3467 17.6403 18.2104C17.7767 18.074 17.8848 17.9121 17.9585 17.734C18.0323 17.5558 18.0701 17.3648 18.07 17.172V8.37503H5.93V17.171ZM4.063 8.14103C3.7023 8.14156 3.35653 8.28515 3.10157 8.5403C2.84661 8.79545 2.70327 9.14132 2.703 9.50203V15.171C2.703 15.3496 2.73818 15.5265 2.80653 15.6915C2.87487 15.8565 2.97505 16.0064 3.10134 16.1327C3.22763 16.259 3.37755 16.3592 3.54255 16.4275C3.70756 16.4959 3.88441 16.531 4.063 16.531C4.2416 16.531 4.41845 16.4959 4.58345 16.4275C4.74846 16.3592 4.89838 16.259 5.02467 16.1327C5.15096 16.0064 5.25113 15.8565 5.31948 15.6915C5.38783 15.5265 5.423 15.3496 5.423 15.171V9.50203C5.42247 9.1415 5.27902 8.79588 5.02408 8.54095C4.76915 8.28601 4.42354 8.14256 4.063 8.14203V8.14103ZM19.935 8.14103C19.5743 8.14156 19.2285 8.28515 18.9736 8.5403C18.7186 8.79545 18.5753 9.14132 18.575 9.50203V15.171C18.575 15.3496 18.6102 15.5265 18.6785 15.6915C18.7469 15.8565 18.8471 16.0064 18.9733 16.1327C19.0996 16.259 19.2496 16.3592 19.4146 16.4275C19.5796 16.4959 19.7564 16.531 19.935 16.531C20.1136 16.531 20.2904 16.4959 20.4555 16.4275C20.6205 16.3592 20.7704 16.259 20.8967 16.1327C21.023 16.0064 21.1231 15.8565 21.1915 15.6915C21.2598 15.5265 21.295 15.3496 21.295 15.171V9.50203C21.2945 9.1415 21.151 8.79588 20.8961 8.54095C20.6411 8.28601 20.2955 8.14256 19.935 8.14203V8.14103Z"
      fill={color ? color : 'currentColor'}
    />
  </svg>
);

export const Ipad = ({ color, size }: Props) => (
  <svg
    width={size ? size.toString() : '24'}
    height={size ? size.toString() : '24'}
    viewBox="0 0 24 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <mask id="mask0_539_5323" maskUnits="userSpaceOnUse" x="3" y="1" width="18" height="22">
      <path
        d="M18.5 2.5H5.5C4.94772 2.5 4.5 2.94772 4.5 3.5V20.5C4.5 21.0523 4.94772 21.5 5.5 21.5H18.5C19.0523 21.5 19.5 21.0523 19.5 20.5V3.5C19.5 2.94772 19.0523 2.5 18.5 2.5Z"
        fill="white"
        stroke="white"
        stroke-width="2"
      />
      <path
        d="M11 18H13"
        stroke={color ? color : 'currentColor'}
        strokeWidth="2"
        strokeLinecap="round"
        strokeLinejoin="round"
      />
    </mask>
    <g mask="url(#mask0_539_5323)">
      <path d="M0 0H24V24H0V0Z" fill={color ? color : 'currentColor'} />
    </g>
  </svg>
);

export const Iphone = ({ color, size }: Props) => (
  <svg
    width={size ? size.toString() : '24'}
    height={size ? size.toString() : '24'}
    viewBox="0 0 24 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M15.5 1H7.5C6.83696 1 6.20107 1.26339 5.73223 1.73223C5.26339 2.20107 5 2.83696 5 3.5V20.5C5 21.163 5.26339 21.7989 5.73223 22.2678C6.20107 22.7366 6.83696 23 7.5 23H15.5C16.163 23 16.7989 22.7366 17.2678 22.2678C17.7366 21.7989 18 21.163 18 20.5V3.5C18 2.83696 17.7366 2.20107 17.2678 1.73223C16.7989 1.26339 16.163 1 15.5 1ZM11.5 22C10.67 22 10 21.33 10 20.5C10 19.67 10.67 19 11.5 19C12.33 19 13 19.67 13 20.5C13 21.33 12.33 22 11.5 22ZM16 18H7V4H16V18Z"
      fill={color ? color : 'currentColor'}
    />
  </svg>
);

export const Mac = ({ color, size }: Props) => (
  <svg
    width={size ? size.toString() : '24'}
    height={size ? size.toString() : '24'}
    viewBox="0 0 24 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path opacity="0.3" d="M4 5H20V16H4V5Z" fill={color ? color : 'currentColor'} />
    <path
      d="M20 18C21.1 18 21.99 17.1 21.99 16L22 5C22 3.9 21.1 3 20 3H4C2.9 3 2 3.9 2 5V16C2 17.1 2.9 18 4 18H0C0 19.1 0.9 20 2 20H22C23.1 20 24 19.1 24 18H20ZM4 5H20V16H4V5ZM12 19C11.45 19 11 18.55 11 18C11 17.45 11.45 17 12 17C12.55 17 13 17.45 13 18C13 18.55 12.55 19 12 19Z"
      fill={color ? color : 'currentColor'}
    />
  </svg>
);

export const Windows = ({ color, size }: Props) => (
  <svg
    width={size ? size.toString() : '24'}
    height={size ? size.toString() : '24'}
    viewBox="0 0 24 24"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M22.5 12.4219H10.875V20.8125L22.5 22.5V12.4219ZM10.125 12.4219H1.5V19.4531L10.125 20.7047V12.4219ZM22.5 1.5L10.875 3.15938V11.6719H22.5V1.5ZM10.125 3.26719L1.5 4.5V11.6719H10.125V3.26719Z"
      fill={color ? color : 'currentColor'}
    />
  </svg>
);
